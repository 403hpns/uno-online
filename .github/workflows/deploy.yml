name: ðŸš€ Deploy

on:
  push:
    branches: ['master']

jobs:
  build-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Cache pnpm dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            **/node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: |
          npm install -g pnpm
          pnpm install

      - name: Build API
        run: pnpm build --filter=api

      - name: Upload API artifacts
        uses: actions/upload-artifact@v4
        with:
          name: api-dist
          path: ./apps/api/dist

  build-web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Cache pnpm dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            **/node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: |
          npm install -g pnpm
          pnpm install

      - name: Build Web
        run: pnpm --filter=web generate

      - name: Upload Web artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-output
          path: ./apps/web/.output/public

  deploy:
    runs-on: ubuntu-latest
    needs: [build-api, build-web]
    steps:
      - name: Download API artifacts
        uses: actions/download-artifact@v4
        with:
          name: api-dist
          path: ./apps/api/dist

      - name: Download Web artifacts
        uses: actions/download-artifact@v4
        with:
          name: web-output
          path: ./apps/web/.output/public

      - name: Deploy API to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: './apps/api/dist/*'
          target: '/var/www/uno-online/apps/api/dist/'

      - name: Deploy Web to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: './apps/web/.output/public/*'
          target: '/var/www/uno-online/apps/web/.output/public/'

      - name: Start services
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            export PATH=$PATH:/usr/local/bin:/usr/bin
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            cd /var/www/uno-online
            pm2 restart uno-api || pm2 start /var/www/uno-online/apps/api/dist/main.js --name uno-api
            npx serve /var/www/uno-online/apps/web/.output/public -p 3001 -n uno-web
